name: Security Pipeline (SAST, Secrets, Container)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  schedule:
    - cron: "0 3 * * 1"   # Her Pazartesi 06:00 TR saati civarı (UTC+3)
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write   # Code scanning/SARIF upload için şart
  packages: read

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # --- SAST (CodeQL Advanced / Java) ---
  codeql-advanced:
    name: SAST (CodeQL - security-extended)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Initialize CodeQL (Advanced)
        uses: github/codeql-action/init@v3
        with:
          languages: java
          # Genişletilmiş güvenlik kuralları
          queries: +security-extended
          build-mode: manual

      # WebGoat çok modüllü; sunucu modülü 'webgoat-server'
      - name: Build (manual for CodeQL)
        run: |
          mvn -q -DskipTests -pl webgoat-server -am package

      - name: Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"

  # --- Secrets (TruffleHog) ---
  trufflehog:
    name: Secrets (TruffleHog)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for secret hunting)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # TruffleHog'un resmi action'ı; GitHub Code Scanning'e otomatik raporlar
      - name: Run TruffleHog (git history)
        uses: trufflesecurity/trufflehog/actions/scan@v3
        with:
          scan: git
          # Sadece doğrulanmış bulguları işaretle (false-positive azaltır)
          extra_args: --only-verified
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # --- Container Image Tarama (Trivy + Grype) ---
  container-scan:
    name: Container Scan (Trivy + Grype)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Projede Dockerfile var → image build et
      - name: Build image
        run: |
          docker build -t app-under-test:ci .

      # Trivy ile image zafiyet taraması (SARIF)
      - name: Trivy scan (image)
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest image \
            --scanners vuln \
            --format sarif -o trivy.sarif \
            app-under-test:ci || true

      - name: Upload SARIF (Trivy)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif
          category: trivy

      # Grype ile image zafiyet taraması (SARIF)
      - name: Grype scan (image)
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            anchore/grype:latest \
            app-under-test:ci -o sarif > grype.sarif || true

      - name: Upload SARIF (Grype)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: grype.sarif
          category: grype
